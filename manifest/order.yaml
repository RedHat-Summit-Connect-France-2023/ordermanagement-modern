kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: orders
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/name: orders
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - orders
        from:
          kind: ImageStreamTag
          namespace: ordermgmt
          name: 'orders:1.0.0-SNAPSHOT'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/ordermgmt/orders@sha256:4c1cd825be7e44bac270e68d53c13476b589f3ba7e44bfcf2ece1fad92cf3978
  replicas: 1
  test: false
  selector:
    app.kubernetes.io/name: orders
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/name: orders
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.openshift.io/runtime: quarkus
    spec:
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: orders
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: JAVA_APP_JAR
              value: /deployments/quarkus-run.jar
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          startupProbe:
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/ordermgmt/orders@sha256:4c1cd825be7e44bac270e68d53c13476b589f3ba7e44bfcf2ece1fad92cf3978
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: orders
      serviceAccount: orders
      securityContext: {}
      schedulerName: default-scheduler
